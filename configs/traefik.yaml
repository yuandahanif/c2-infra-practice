################################################################
#
# Configuration sample for Traefik v2.
#
# For Traefik v1: https://github.com/traefik/traefik/blob/v1.7/traefik.sample.toml
#
################################################################

################################################################
# Global configuration
################################################################
global:
  checkNewVersion: true
  sendAnonymousUsage: true

log:
  filePath: "./logs/logs.log"
  format: json

################################################################
# EntryPoints configuration
################################################################

# EntryPoints definition
#
# Optional
#
entryPoints:
  web:
    address: :80

  websecure:
    address: :443

  web-decoy:
    address: :8080

  websecure-decoy:
    address: :4433

################################################################
# API and dashboard configuration
################################################################

# Enable API and dashboard
#
# Optional
#
api:
  # Enable the API in insecure mode
  #
  # Optional
  # Default: false
  #
  insecure:
    false

    # Enabled Dashboard
    #
    # Optional
    # Default: true
    #
  dashboard: true

################################################################
# Docker configuration backend
################################################################

providers:
  # Enable Docker configuration backend
  docker:
    # Docker server endpoint. Can be a tcp or a unix socket endpoint.
    #
    # Required
    # Default: "unix:///var/run/docker.sock"
    #
    endpoint: unix:///var/run/docker.sock

    # Default host rule.
    #
    # Optional
    # Default: "Host(`{{ normalize .Name }}`)"
    #
#    defaultRule: Host(`{{ normalize .Name }}.docker.localhost`)

# Expose containers by default in traefik
#
# Optional
# Default: true
#
#    exposedByDefault: false

# Dynamic Configuration
http:
  routers:
    dashboard:
      rule: Host(`tf-dashboard.ninomae.my.id`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      service: api@internal
      middlewares:
        - auth

    router-http:
      pollTimeout: "5s"
      entryPoints:
        - "web"
      endpoint: "http://127.0.0.1:80"
      rule: "Host(`api.ninomae.my.id`)"

    router-https:
      entryPoints:
        - "websecure"
      pollTimeout: "5s"
      endpoint: "http://127.0.0.1:443"
      rule: "Host(`api.ninomae.my.id`)"
      tls:
        certResolver: default-resolver

    nginx:
      rule: Host(`ninomae.my.id`) || Host(`www.ninomae.my.id`)
      entryPoints:
        - web-decoy
        - websecure-decoy
      service: nginx-service
      tls:
        certResolver: default-resolver

  services:
    nginx-service:
      loadBalancer:
        servers:
          - url: "http://nginx:80"
        passHostHeader: true

  middlewares:
    auth:
      basicAuth:
        users:
          - "yume:read-the-docs-pls"

certificatesResolvers:
  default-resolver:
    acme:
      email: 20523134@students.uiia.c.id
      storage: "letsencrypt/acme.json"
      httpChallenge:
        # used during the challenge
        entryPoint: web-decoy
